{"openapi": "3.1.0", "info": {"title": "WattTime Data API", "description": "To start using the API, first register for an account by using the /register endpoint. Then use the /login endpoint to obtain an access token. You can then use your token to access the remainder of our endpoints. You must include your token in an authorization (bearer) header in subsequent requests to retrieve data. Your access token will expire after 30 minutes and you'll need to sign in again to obtain a new one.", "version": "V3"}, "servers": [{"url": "https://api.watttime.org", "description": "WattTime Base API"}], "paths": {"/register": {"post": {"tags": ["Authenticate"], "summary": "Provide basic information to self register for an account.", "operationId": "post_username_register_post", "parameters": [{"name": "username", "in": "query", "required": true, "schema": {"type": "string", "description": "name of user that will be used in subsequent calls", "title": "Username"}, "description": "name of user that will be used in subsequent calls", "example": "freddo"}, {"name": "password", "in": "query", "required": true, "schema": {"type": "string", "description": "user password. Password must be at least 8 characters, with at least 1 of each alpha, number and special characters.", "title": "Password"}, "description": "user password. Password must be at least 8 characters, with at least 1 of each alpha, number and special characters.", "example": "the_frog"}, {"name": "email", "in": "query", "required": true, "schema": {"type": "string", "description": "valid email address. The email address used to register will only be used for communication regarding API outages and updates. The email address will not be shared or used for any other promotional purpose. For others in your organization who would like these updates, they can subscribe to our Status Page. ", "title": "Email"}, "description": "valid email address. The email address used to register will only be used for communication regarding API outages and updates. The email address will not be shared or used for any other promotional purpose. For others in your organization who would like these updates, they can subscribe to our Status Page. ", "example": "freddo@frog.org"}, {"name": "org", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "organization name", "title": "Org"}, "description": "organization name", "example": "freds world"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegisterResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "x-codeSamples": [{"lang": "Python", "source": "\n# To register, use the code below. Please note that for these code examples we are using filler values for username\n# (freddo), password (the_frog), email (freddo@frog.org), org (freds world) and you should replace each if you are\n# copying and pasting this code.\n\nimport requests\nregister_url = 'https://api2.watttime.org/v2/register'\nparams = {'username': 'freddo',\n         'password': 'the_frog',\n         'email': 'freddo@frog.org',\n         'org': 'freds world'}\nrsp = requests.post(register_url, json=params)\nprint(rsp.text)\n", "label": "Python"}]}}, "/login": {"get": {"tags": ["Authenticate"], "summary": "Use HTTP basic auth to exchange username and password for an access token.", "description": "Remember that you need to include this token in an authorization bearer header for all subsequent data calls. This header has the form: `Authorization: Bearer <your_token>`", "operationId": "get_token_login_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoginResponse"}}}}}, "x-codeSamples": [{"lang": "Python", "source": "\n# To register, use the code below. Please note that for these code examples we are using filler values for username\n# (freddo), password (the_frog), email (freddo@frog.org), org (freds world) and you should replace each if you are\n# copying and pasting this code.\n\nimport requests\nregister_url = 'https://api2.watttime.org/v2/register'\nparams = {'username': 'freddo',\n         'password': 'the_frog',\n         'email': 'freddo@frog.org',\n         'org': 'freds world'}\nrsp = requests.post(register_url, json=params)\nprint(rsp.text)\n", "label": "Python"}]}}, "/password": {"get": {"tags": ["Authenticate"], "summary": "Provide your username to request an email be sent to you with password reset instructions.", "operationId": "get_password_password_get", "parameters": [{"name": "username", "in": "query", "required": true, "schema": {"type": "string", "description": "name of user that will be used in subsequent calls", "title": "Username"}, "description": "name of user that will be used in subsequent calls", "example": "freddo"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PasswordResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "x-codeSamples": [{"lang": "Python", "source": "\n# To reset your password, use this code:\n\nimport requests\npassword_url = 'https://api.watttime.org/password/?username=freddo'\nrsp = requests.get(password_url)\nprint(rsp.json())\n", "label": "Python"}]}}}, "components": {"schemas": {"HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "LoginResponse": {"properties": {"token": {"type": "string", "title": "Token"}}, "type": "object", "required": ["token"], "title": "LoginResponse", "example": {"token": "abcdef0123456789fedcabc"}}, "PasswordResponse": {"properties": {"ok": {"type": "string", "title": "Ok"}}, "type": "object", "required": ["ok"], "title": "PasswordResponse", "example": {"ok": "Please check your email for the password reset link"}}, "RegisterResponse": {"properties": {"user": {"type": "string", "title": "User"}, "ok": {"type": "string", "title": "Ok"}}, "type": "object", "required": ["user", "ok"], "title": "RegisterResponse", "example": {"ok": "User created", "user": "freddo"}}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}}}
